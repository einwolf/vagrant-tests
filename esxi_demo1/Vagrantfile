# -*- mode: ruby -*-
# vi: set ft=ruby :

#  Fully documented Vagrantfile available
#  in the wiki:  https://github.com/josenk/vagrant-vmware-esxi/wiki

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
    # The most common configuration options are documented and commented below.
    # For a complete reference, please see the online documentation at
    # https://docs.vagrantup.com.
  
    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://vagrantcloud.com/search.
    #config.vm.box = "base"
    #config.vm.box = 'hashicorp/precise64'
    #config.vm.box = 'generic/centos7'
    #config.vm.box = 'generic/centos6'
    #config.vm.box = 'generic/fedora27'
    #config.vm.box = 'generic/freebsd11'
    #config.vm.box = 'generic/ubuntu1710'
    #config.vm.box = 'generic/debian9'
    #config.vm.box = 'steveant/CentOS-7.0-1406-Minimal-x64'
    #config.vm.box = 'geerlingguy/centos7'
    #config.vm.box = 'geerlingguy/ubuntu1604'
    #config.vm.box = 'laravel/homestead'
    #config.vm.box = 'puphpet/debian75-x64'
    
    #vm_hostname = "#{`hostname`}".gsub(/[^0-9a-z ]/i,"")
    #vm_username = "#{ENV['USER']}".gsub(/[^0-9a-z ]/i,"")
    #
    #config.vm.define "box1" do |box1|
    #  box1.vm.hostname = "V-" + "#{`hostname`}".gsub(/[^0-9a-z ]/i,"") + "-" + "#{ENV['USER']}".gsub(/[^0-9a-z ]/i,"") + "-box1"
    #  box1.vm.box = "hashicorp/precise64"
    #end
    #
    #config.vm.define "box2" do |box2|
    #  box2.vm.hostname = "V-" + vm_hostname + "-" + vm_username + "-box2"
    #  box2.vm.box = "generic/centos7"
    #end

    nodes = [
        { hostname: "box1", box: "centos/7" },
        # { hostname: "box1", box: "centos/8" },
        # { hostname: "box2", box: "generic/fedora31" },
        # { hostname: "box2", box: "ubuntu/trusty64" },
        # { hostname: "box2", box: "ubuntu/xenial64" }
    ]
    
    vm_hostname = "#{`hostname`}".gsub(/[^0-9a-z\-]/i,"")
    vm_username = "#{ENV['USER']}".gsub(/[^0-9a-z]/i,"")
    
    nodes.each do |node|
        config.vm.define node[:hostname] do |config|
            # esxi has a problem with dsa.
            config.ssh.dsa_authentication = false

            # Disable automatic box update checking. If you disable this, then
            # boxes will only be checked for updates when the user runs
            # `vagrant box outdated`. This is not recommended.
            # config.vm.box_check_update = false
        
            # Create a forwarded port mapping which allows access to a specific port
            # within the machine from a port on the host machine. In the example below,
            # accessing "localhost:8080" will access port 80 on the guest machine.
            # NOTE: This will enable public access to the opened port
            # config.vm.network "forwarded_port", guest: 80, host: 8080
        
            # Create a forwarded port mapping which allows access to a specific port
            # within the machine from a port on the host machine and only allow access
            # via 127.0.0.1 to disable public access
            # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
        
            # Create a private network, which allows host-only access to the machine
            # using a specific IP.
            # config.vm.network "private_network", ip: "192.168.33.10"
        
            # Create a public network, which generally matched to bridged network.
            # Bridged networks make the machine appear as another physical device on
            # your network.
            # config.vm.network "public_network"
            
            #  Vagrant can configure additional network interfaces using a static IP or
            #  DHCP. Use public_network or private_network to manually set a static IP and
            #  optionally netmask.  ESXi doesn't use the concept of public or private
            #  networks so both are valid here.  The primary network interface is considered the
            #  "vagrant management" interface and cannot be changed and this plugin
            #  supports 10 NICS, so you can specify 9 entries here!
            #
            #  https://www.vagrantup.com/docs/networking/public_network.html
            #  https://www.vagrantup.com/docs/networking/private_network.html
            #
            #    *** Invalid settings could cause 'vagrant up' to fail ***
            # config.vm.network 'private_network', ip: '192.168.10.170', netmask: '255.255.255.0'
            # config.vm.network 'private_network', ip: '192.168.11.170'
            # config.vm.network 'public_network', ip: '192.168.12.170'

            # Use only the default network
        
            # Share an additional folder to the guest VM. The first argument is
            # the path on the host to the actual folder. The second argument is
            # the path on the guest to mount the folder. And the optional third
            # argument is a set of non-required options.
            # config.vm.synced_folder "../data", "/vagrant_data"
            
            #  Use rsync and NFS synced folders. (or use the option to disable them)
            #    https://www.vagrantup.com/docs/synced-folders/
            # The nfs provider configures /etc/exports using sudo
            # It uses nfs3 by default
            # config.vm.synced_folder('.', '/vagrant', type: 'rsync')
            # config.vm.synced_folder('.', '/vagrant', type: 'nfs', disabled: true)

            config.vm.hostname = "V-" + vm_hostname + "-" + vm_username + "-" + node[:hostname]
            config.vm.box = node[:box]

            # /vagrant is being done with rsync by default

            # Add another synced directory
            # config.vm.synced_folder ".", "/vagrant_data", type:"nfs", nfs_version: 4, nfs_udp: false
            config.vm.synced_folder ".", "/vagrant_data", type:"sshfs"

            # Vagant has an implied DHCP Network 0 used for management.
            # It can't be altered in Vagrantfile. Must to use a provision provider to modify in os.
            # config.vm.network "public_network", type:"dhcp", bridge: "eth0"

            # Run Ansible from the Vagrant host to provision
            config.vm.provision "ansible" do |ansible|
                ansible.playbook = "provision-playbook1.yaml"
            end

            # Inline script provision
            $script = <<-'SCRIPT'
            echo "I am provisioning..."
            date > /etc/vagrant_provisioned_at
            SCRIPT

            config.vm.provision "shell", inline: $script

            # Set proxy in guests.
            if Vagrant.has_plugin?("vagrant-proxyconf")
                config.proxy.http = "http://proxy.example.com:80/"
                config.proxy.https = "http://proxy.example.com:80/"
                config.proxy.no_proxy = "localhost,127.0.0.1,.example.com"
            end

            #
            #  Provider (esxi) settings
            #
            config.vm.provider :vmware_esxi do |esxi|
        
                #  REQUIRED!  ESXi hostname/IP
                esxi.esxi_hostname = 'esxi4'
            
                #  ESXi username
                esxi.esxi_username = 'root'

                #  ESXi SSH port
                #esxi.esxi_hostport = 22
            
                #  IMPORTANT!  Set ESXi password.
                #    1) 'prompt:'
                #    2) 'file:'  or  'file:my_secret_file'
                #    3) 'env:'  or 'env:my_secret_env_var'
                #    4) 'key:'  or  key:~/.ssh/some_ssh_private_key'
                #    5) or esxi.esxi_password = 'my_esxi_password'
                #
                #esxi.esxi_password = 'prompt:'
                esxi.esxi_password = 'file:esxi_password.txt'
                        
                #  HIGHLY RECOMMENDED!  ESXi Virtual Network
                #    You should specify an ESXi Virtual Network!  If it's not specified, the
                #    default is to use the first found.  You can specify up to 10 virtual
                #    networks using an array format.
                #esxi.esxi_virtual_network = ['VM Network','VM Network2','VM Network3','VM Network4']

                # Reminder esxi_virtual_network[0] is assigned to the default Vagrant management interface.
                # Provider doesn't see distributed virtual switches.
                # esxi.esxi_virtual_network = ['mgmt_epg1']
                esxi.esxi_virtual_network = ['VM Network esx4']
            
                #  OPTIONAL.  Specify a Disk Store
                esxi.esxi_disk_store = 'cargofluid_eco8_vware1'
            
                #  OPTIONAL.  Resource Pool
                #     Vagrant will NOT create a Resource pool it for you.
                #esxi.esxi_resource_pool = '/Vagrant'
            
                #  Optional. Specify a VM to clone instead of uploading a box.
                #    Vagrant can use any stopped VM as the source 'box'.   The VM must be
                #    registered, stopped and must have the vagrant insecure ssh key installed.
                #    If the VM is stored in a resource pool, it must be specified.
                #    See wiki: https://github.com/josenk/vagrant-vmware-esxi/wiki/How-to-clone_from_vm
                #esxi.clone_from_vm = 'resource_pool/source_vm'
            
                #  OPTIONAL.  Guest VM name to use.
                #    The Default will be automatically generated.
                #esxi.guest_name = 'Custom-Guest-VM_Name'
            
                #  OPTIONAL.  When automatically naming VMs, use this prifix.
                #esxi.guest_name_prefix = 'V-'
            
                #  OPTIONAL.  Set the guest username login.  The default is 'vagrant'.
                #esxi.guest_username = 'vagrant'
            
                #  OPTIONAL.  Memory size override
                esxi.guest_memsize = '2048'
            
                #  OPTIONAL.  Virtual CPUs override
                esxi.guest_numvcpus = '2'
            
                #  OPTIONAL & RISKY.  Specify up to 10 MAC addresses
                #    The default is ovftool to automatically generate a MAC address.
                #    You can specify an array of MAC addresses using upper or lower case,
                #    separated by colons ':'.
                #esxi.guest_mac_address = ['00:50:56:aa:bb:cc', '00:50:56:01:01:01','00:50:56:02:02:02','00:50:56:BE:AF:01' ]
            
                #   OPTIONAL & RISKY.  Specify a guest_nic_type
                #     The validated list of guest_nic_types are 'e1000', 'e1000e', 'vmxnet',
                #     'vmxnet2', 'vmxnet3', 'Vlance', and 'Flexible'.
                #esxi.guest_nic_type = 'e1000'
            
                #  OPTIONAL. Specify a disk type.
                #    If unspecified, it will be set to 'thin'.  Otherwise, you can set to
                #    'thin', 'thick', or 'eagerzeroedthick'
                #esxi.guest_disk_type = 'thick'
                esxi.guest_disk_type = 'thin'
            
                #  OPTIONAL. Boot disk size.
                #    If unspecified, the boot disk size will be the same as the original
                #    box.  You can specify a larger boot disk size in GB.  The extra disk space
                #    will NOT automatically be available to your OS.  You will need to
                #    create or modify partitions, LVM and/or filesystems.
                #esxi.guest_boot_disk_size = 50
            
                #  OPTIONAL.  Create additional storage for guests.
                #    You can specify an array of up to 13 virtual disk sizes (in GB) that you
                #    would like the provider to create once the guest has been created.  You
                #    can optionally specify the size and datastore using a hash.
                #esxi.guest_storage = [ 10, 20, { size: 30, datastore: 'datastore1' } ]
            
                #  OPTIONAL. specify snapshot options.
                #esxi.guest_snapshot_includememory = 'true'
                #esxi.guest_snapshot_quiesced = 'true'
            
                #  RISKY. guest_guestos
                #    https://github.com/josenk/vagrant-vmware-esxi/ESXi_guest_guestos_types.md
                #esxi.guest_guestos = 'centos-64'
            
                #  OPTIONAL. guest_virtualhw_version
                #    ESXi 6.5 supports these versions. 4,7,8,9,10,11,12,13 & 14.
                esxi.guest_virtualhw_version = '14'
            
                #  RISKY. guest_custom_vmx_settings
                #esxi.guest_custom_vmx_settings = [['vhv.enable','TRUE'], ['floppy0.present','TRUE']]
            
                #  OPTIONAL. Set local_lax option on ovftool
                #esxi.local_lax = 'true'
            
                #  OPTIONAL. Guest IP Caching
                #esxi.local_use_ip_cache = 'True'
            
                #  DANGEROUS!  Allow Overwrite
                #    If unspecified, the default is to produce an error if overwriting
                #    vm's and packages.
                #esxi.local_allow_overwrite = 'True'
            
                #  Advanced Users.
                #    If set to 'True', all WARNINGS will produce a FAILURE and vagrant will stop.
                #esxi.local_failonwarning = 'True'
            
                #  Plugin debug output.
                #    Please send any bug reports with this debug output...
                #esxi.debug = 'true'
            
            end
        end
    end
end
